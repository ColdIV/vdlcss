.container {
    margin-left: auto;
    margin-right: auto;
    padding-left: 15px;
    padding-right: 15px;
    @each $label, $breakpoint in $breakpoints {
        @media (min-width: #{$breakpoint}) {
            max-width: map-get($container-max-widths, $label);
        }
    }
}

// Grid
@include addBreakpointPrefixes ('grid') {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-gap: 20px;
}

@include addBreakpointPrefixes ('cell') {
    grid-column: auto;
}

@each $label, $breakpoint in $breakpoints {
    @for $i from 1 through 12 {
        $tmpClass: cell-#{$i};
        @if $label != xs { $tmpClass: '#{$label}\\:cell-#{$i}'; }

        @media (min-width: #{$breakpoint}) {
            .#{$tmpClass} {
                grid-column: span $i;
            }
        }
    }
}

// Flex
@include addBreakpointPrefixes ('row') {
    display: flex;
    flex-flow: row;

    .left { justify-content: flex-start; }

    .right { justify-content: flex-end; }

    .top { align-items: flex-start; }

    .bottom { align-items: flex-end; }

    .center-horizontal { justify-content: center; }

    .center-vertical { align-items: center; }

    .center {
        align-items: center;
        justify-content: center;
    }
}

@include addBreakpointPrefixes ('column') {
    display: flex;
    flex-flow: column;

    .left { align-items: flex-start; }

    .right { align-items: flex-end; }

    .top { justify-content: flex-start; }

    .bottom { justify-content: flex-end; }

    .center-horizontal { align-items: center; }

    .center-vertical { justify-content: center; }
    
    .center {
        align-items: center;
        justify-content: center;
    }
}

.position-relative {
    position: relative;
}

.position-absolute {
    position: absolute;
}

.position-fixed {
    position: fixed;
}

.position-sticky {
    position: sticky;
}

@for $i from 0 through 5 {
    .top-#{$i} { top: #{$i}rem; }
    .right-#{$i} { right: #{$i}rem; }
    .bottom-#{$i} { bottom: #{$i}rem; }
    .left-#{$i} { left: #{$i}rem; }
}

.stretch {
    position: absolute;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
}

.block {
    display: block;
}

.inline-block {
    display: inline-block;
}

.inline {
    display: inline;
}

.scroll-x {
    overflow-x: scroll;
}

.scroll-y {
    overflow-y: scroll;
}

.overflow-hidden {
    overflow: hidden;
}

// Padding / Margin
$classes: (
    p: padding,
    m: margin,
    pt: padding-top,
    pr: padding-right,
    pb: padding-bottom,
    pl: padding-left,
    mt: margin-top,
    mr: margin-right,
    mb: margin-bottom,
    ml: margin-left,
    px: padding,
    py: padding,
    mx: margin,
    my: margin
);

@each $class, $rule in $classes {
    @each $label, $breakpoint in $breakpoints {
        @for $i from 0 through 5 {
            $tmpClass: '#{$class}-#{$i}';
            @if $label != xs { $tmpClass: '#{$label}\\:#{$class}-#{$i}'; }

            @media (min-width: #{$breakpoint}) {
                .#{$tmpClass} {
                    @if $class == px or $class == mx {
                        #{$rule}-left: #{$i}rem;
                        #{$rule}-right: #{$i}rem;
                    } @else if $class == py or $class == my {
                        #{$rule}-top: #{$i}rem;
                        #{$rule}-bottom: #{$i}rem;
                    } @else {
                        #{$rule}: #{$i}rem;
                    }
                }
            }
        }
    }
}